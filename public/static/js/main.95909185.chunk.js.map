{"version":3,"sources":["features/users/usersSlice.ts","services/api.ts","features/tasks/tasksSlice.ts","components/EditTask.tsx","components/Modal.tsx","components/TaskComponent.tsx","components/TasksList.tsx","components/NewTask.tsx","components/Card.tsx","components/Login.tsx","styles/jss/loginStyle.ts","App.tsx","reportWebVitals.ts","app/store.ts","index.tsx"],"names":["login","createAsyncThunk","user","thunkAPI","a","post","response","ok","json","responseToken","token","rejectWithValue","usersSlice","createSlice","name","initialState","localStorage","getItem","isLogin","userError","reducers","logout","state","setItem","setUserError","action","payload","extraReducers","builder","addCase","fulfilled","rejected","actions","selectIsLogin","users","selectUserError","url","body","fetch","method","headers","JSON","stringify","fetchTasks","arg","getState","tasksFromServer","Error","createTask","newTask","taskFromServer","editTask","editedTask","id","removeTask","tasksSlice","status","error","tasks","resetTasks","pending","concat","message","push","newTasks","filter","task","find","completed","text","selectAllTasks","selectStatus","selectError","useStyles","makeStyles","root","display","gap","padding","input","flexGrow","EditTask","setOpen","classes","useState","inputValue","setInputValue","checked","setChecked","onSubmit","event","preventDefault","className","TextField","value","onChange","target","label","variant","FormControlLabel","control","Checkbox","color","Button","type","theme","createStyles","modal","alignItems","justifyContent","paper","backgroundColor","border","boxShadow","ModalUI","children","open","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","TaskComponent","React","dispatch","useDispatch","ListItem","button","ListItemText","onClick","style","textDecoration","loader","position","top","bottom","left","right","margin","TasksList","useSelector","tasksStatus","useEffect","CircularProgress","List","component","map","Alert","severity","NewTask","card","borderRadius","background","width","flexDirection","minWidth","wordWrap","fontSize","transition","Card","props","rest","imageBackground","cardHidden","opacity","transform","cardHeader","textAlign","fontWeight","cardBody","flex","gridContainer","height","zIndex","gridItem","paddingRight","paddingLeft","pageHeader","minHeight","backgroundImage","backgroundSize","backgroundPosition","content","Login","setName","password","setPassword","cardAnimaton","setCardAnimation","setTimeout","length","Grid","container","justify","item","xs","sm","md","maxWidth","title","App","AppBar","Toolbar","Typography","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","tasksReducer","usersReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95909185.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../app/store\";\nimport { post, userInfoDTO } from \"../../services/api\";\n\ntype LoginResponse = {\n    token: string\n    success: boolean\n}\n\nexport const login = createAsyncThunk('user/login', async function (user: userInfoDTO, thunkAPI) {\n    const response = await post('/api/user/login', user)\n    if (response.ok) {\n        const responseToken: LoginResponse = await response.json();\n        return responseToken.token\n    }\n    else return thunkAPI.rejectWithValue('Incorrect name or password')\n})\n\nexport const usersSlice = createSlice({\n    name: 'users',\n    initialState: {\n        token: localStorage.getItem('Token') || '',\n        isLogin: localStorage.getItem('Token') ? true : false,\n        userError: ''\n    },\n    reducers: {\n        logout(state) {\n            state.isLogin = false\n            state.token = ''\n            localStorage.setItem('Token', '')\n        },\n        setUserError(state, action) {\n            state.userError = action.payload\n        }\n    },\n    extraReducers: builder => {\n        builder.addCase(login.fulfilled, (state, action) => {\n            state.token = action.payload\n            state.isLogin = true\n            state.userError = ''\n            localStorage.setItem('Token', action.payload)\n        })\n        builder.addCase(login.rejected, (state, action) => {\n            state.token = ''\n            state.isLogin = false\n            state.userError = action.payload as string\n            localStorage.setItem('Token', '')\n        })\n    }\n})\n\nexport default usersSlice.reducer\nexport const { logout, setUserError } = usersSlice.actions\n\nexport const selectToken = (state: RootState) => state.users.token\nexport const selectIsLogin = (state: RootState) => state.users.isLogin\nexport const selectUserError = (state: RootState) => state.users.userError","import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectToken } from \"../features/users/usersSlice\";\nimport { Task, TaskDTO } from \"../types\";\n\ntype postTaskDTO = Task\n\ntype patchTaskDTO = {\n    text?: string\n    completed: boolean\n}\n\nexport type userInfoDTO = {\n    name: string\n    password: string\n}\n\nexport function useFetchTasks(url: string) {\n    const [tasks, setTasks] = useState<TaskDTO[]>([])       \n    const [error, setError] = useState<Error | null>(null)       \n    const [loading, setLoading] = useState(true)\n    const token = useSelector(selectToken)  \n\n    useEffect(() => {\n        fetch(url, { headers: {\n            'authorization': token\n        }}).then(response => {            \n            if (response.ok) return response.json();\n            else throw new Error('Response is not ok')\n        }).then((tasksFromServer: TaskDTO[]) => {\n            setTasks(tasksFromServer)\n            setLoading(false)\n        }).catch((err: Error) => {\n            console.error(err)\n            setError(err)\n        })\n    }, [])\n\n    const result: [TaskDTO[], typeof setTasks] = [tasks, setTasks]\n    return {loading, error, result}\n}\n\nexport function post(url: string, body: postTaskDTO | userInfoDTO, token?: string) {\n    return fetch(url, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'authorization': token || ''\n        },\n        body: JSON.stringify(body)\n    })\n}\n\nexport function patch(url: string, body: patchTaskDTO, token?: string) {\n    return fetch(url, {\n        method: 'PATCH',\n        headers: {\n            'Content-Type': 'application/json',\n            'authorization': token || ''\n        },\n        body: JSON.stringify(body)\n    })\n}\n\nexport function remove(url: string, token?: string) {\n    return fetch(url, {\n        method: 'DELETE',\n        headers: {\n            'authorization': token || ''\n        },\n    })\n}","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../app/store\";\nimport { patch, post, remove } from \"../../services/api\";\nimport { Task, TaskDTO } from \"../../types\";\n\ninterface TasksState {\n    status: string\n    error: null | string | undefined\n    tasks: TaskDTO[]\n}\n\nexport const fetchTasks = createAsyncThunk('tasks/fetchTasks', async function (arg, thunkAPI) {\n    const state = thunkAPI.getState() as RootState\n    const response = await fetch('/api/tasks', { headers: {        \n        'authorization': state.users.token\n    }})\n    if (response.ok) {\n        const tasksFromServer: TaskDTO[] = await response.json();\n        return tasksFromServer\n    }\n    else throw new Error('Response is not ok')\n})\n\nexport const createTask = createAsyncThunk('tasks/createTask', async function(newTask: Task, thunkAPI) {\n    const state = thunkAPI.getState() as RootState\n    const response = await post('/api/task', newTask, state.users.token)\n    if (response.ok) {\n        const taskFromServer: TaskDTO = await response.json();\n        return taskFromServer\n    }\n    else throw new Error('Response is not ok')\n})\n\nexport const editTask = createAsyncThunk('tasks/editTask', async function(editedTask: TaskDTO, thunkAPI) {\n    const state = thunkAPI.getState() as RootState\n    const response = await patch('/api/task/' + editedTask.id, editedTask, state.users.token)\n    if (response.ok) {\n        return editedTask\n    }\n    else throw new Error('Response is not ok')\n})\n\nexport const removeTask = createAsyncThunk('tasks/removeTask', async function(id: number, thunkAPI) {\n    const state = thunkAPI.getState() as RootState\n    const response = await remove('/api/task/' + id, state.users.token)\n    if (response.ok) {\n        return id\n    }\n    else throw new Error('Response is not ok')\n})\n\nexport const tasksSlice = createSlice({\n    name: 'tasks',\n    initialState: {\n        status: 'idle',\n        error: null,\n        tasks: []\n    } as TasksState,\n    reducers: {\n        resetTasks(state) {\n            state.status = 'idle'\n            state.error = null\n            state.tasks = []\n        }\n    },\n    extraReducers: builder => {\n        builder.addCase(fetchTasks.pending, (state, action) => {\n            state.status = 'loading'\n        })\n        builder.addCase(fetchTasks.fulfilled, (state, action) => {\n            state.status = 'succeeded'\n            state.tasks = state.tasks.concat(action.payload)\n        })\n        builder.addCase(fetchTasks.rejected, (state, action) => {\n            state.status = 'failed'\n            state.error = action.error.message\n        })\n        builder.addCase(createTask.fulfilled, (state, action) => {\n            state.tasks.push(action.payload)\n        })\n        builder.addCase(removeTask.fulfilled, (state, action) => {\n            const newTasks = state.tasks.filter(task => {\n                return task.id !== action.payload\n            })\n            state.tasks = newTasks\n        })\n        builder.addCase(editTask.fulfilled, (state, action) => {\n            const editedTask = state.tasks.find(task => task.id === action.payload.id)\n            if (editedTask) {\n                editedTask.completed = action.payload.completed\n                editedTask.text = action.payload.text\n            }\n        })\n    }\n})\n\nexport const { resetTasks } = tasksSlice.actions\n\nexport default tasksSlice.reducer\n\nexport const selectAllTasks = (state: RootState) => state.tasks.tasks\n\nexport const selectStatus = (state: RootState) => state.tasks.status\n\nexport const selectError = (state: RootState) => state.tasks.error","import { Button, makeStyles, TextField } from \"@material-ui/core\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport React, { useState } from \"react\"\nimport { Task, TaskDTO } from \"../types\"\n\nconst useStyles = makeStyles({\n    root: {\n        display: 'flex',\n        gap: '.5rem',\n        padding: '0 16px'\n    },\n    input: {\n        flexGrow: 1\n    }\n})\n\ntype EditTaskProps = {\n    editTask: (task: TaskDTO) => void\n    task: TaskDTO\n    setOpen: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport default function EditTask({ editTask, task, setOpen }: EditTaskProps) {\n    const classes = useStyles()\n    const [inputValue, setInputValue] = useState(task.text)\n    const [checked, setChecked] = useState(task.completed)\n    const submitHandler = (event: React.SyntheticEvent) => {\n        event.preventDefault()\n        if (inputValue === '') return;\n        editTask({\n            id: task.id,\n            text: inputValue,\n            completed: checked\n        })\n        setOpen(false)\n    }\n    const inputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setInputValue(event.target.value)\n    }\n    return (\n        <form onSubmit={submitHandler} className={classes.root}>\n            <TextField className={classes.input} value={inputValue} onChange={inputHandler} label=\"Task\" variant=\"outlined\" />\n            <FormControlLabel\n                control={\n                    <Checkbox\n                        checked={checked}\n                        onChange={(event) => setChecked(event.target.checked)}\n                        color=\"primary\"\n                    />\n                }\n                label=\"Completed\"\n            />\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Save task</Button>\n        </form>\n    )\n}","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        modal: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n        },\n        paper: {\n            backgroundColor: '#fff',\n            border: '2px solid #000',\n            boxShadow: '0px 3px 5px -1px rgb(0 0 0 / 20%), 0px 5px 8px 0px rgb(0 0 0 / 14%), 0px 1px 14px 0px rgb(0 0 0 / 12%)',\n            padding: '16px 32px 24px',\n        },\n    }),\n);\n\ntype ModalUIProps = {\n    children: React.ReactNode\n    open: boolean\n    setOpen: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport default function ModalUI({ children, open, setOpen }: ModalUIProps) {\n    const classes = useStyles();\n    \n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <Modal\n            aria-labelledby=\"transition-modal-title\"\n            aria-describedby=\"transition-modal-description\"\n            className={classes.modal}\n            open={open}\n            onClose={handleClose}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps={{\n                timeout: 500,\n            }}\n        >\n            <Fade in={open}>\n                <div className={classes.paper}>\n                    {children}\n                </div>\n            </Fade>\n        </Modal>\n    );\n}","import { Button, ListItemText, makeStyles } from \"@material-ui/core\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport React from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { editTask, removeTask } from \"../features/tasks/tasksSlice\"\nimport { TaskDTO } from \"../types\"\nimport EditTask from \"./EditTask\"\nimport ModalUI from \"./Modal\"\n\nconst useStyles = makeStyles({\n  root: {\n    gap: '.5rem'\n  }\n})\n\ntype TaskProps = {\n  task: TaskDTO\n}\nexport default function TaskComponent({ task }: TaskProps) {\n  const classes = useStyles()\n  const [open, setOpen] = React.useState(false);\n  const dispatch = useDispatch()\n\n  return (\n    <>\n      <ListItem button className={classes.root}>\n        <ListItemText onClick={() => {\n          dispatch(editTask({ ...task, completed: !task.completed }))\n        }} style={{ textDecoration: task.completed ? 'line-through' : 'none' }}>\n          {task.text}\n        </ListItemText>\n        <Button variant=\"contained\" color=\"primary\"\n          onClick={() => setOpen(true)}>\n          Edit\n        </Button>\n        <Button variant=\"contained\" color=\"secondary\"\n          onClick={() => { dispatch(removeTask(task.id)) }}>\n          Remove\n        </Button>\n      </ListItem>\n      {open && <ModalUI open={open} setOpen={setOpen} >\n        <EditTask editTask={(editedTask) => { dispatch(editTask(editedTask)) }} task={task} setOpen={setOpen} />\n      </ModalUI>}\n    </>\n  )\n}","import List from \"@material-ui/core/List\"\nimport { useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { fetchTasks, selectAllTasks, selectError, selectStatus } from \"../features/tasks/tasksSlice\"\nimport { TaskDTO, MapArrayToJSX } from \"../types\"\nimport TaskComponent from \"./TaskComponent\"\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from \"@material-ui/core\"\nimport Alert from '@material-ui/lab/Alert';\n\nconst useStyles = makeStyles({\n    loader: {\n      position: 'absolute',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      margin: 'auto'\n    }\n  })\n\nexport default function TasksList() {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const tasks = useSelector(selectAllTasks)\n    const tasksStatus = useSelector(selectStatus)\n    const error = useSelector(selectError)\n\n    useEffect(() => {\n        if (tasksStatus === 'idle') {\n            dispatch(fetchTasks())\n        }\n    }, [tasksStatus, dispatch])\n\n    const mapCallback: MapArrayToJSX<TaskDTO> = (task) => {\n        return <TaskComponent\n            key={task.id}\n            task={task}\n        />\n    }\n    if (tasksStatus === 'loading') {\n        return <CircularProgress className={classes.loader} />\n    } else if (tasksStatus === 'succeeded') {\n        return (\n            <List component=\"ul\">\n                {tasks.map(mapCallback)}\n            </List>\n        )\n    } else if (tasksStatus === 'failed') {\n        return <Alert severity=\"error\">{error}</Alert>\n    } else {\n        return null\n    }\n}","import { Button, makeStyles, TextField } from \"@material-ui/core\"\nimport React, { useState } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { createTask } from \"../features/tasks/tasksSlice\"\n\nconst useStyles = makeStyles({\n    root: {\n        display: 'flex',\n        gap: '.5rem',\n        padding: '0 16px'\n    },\n    input: {\n        flexGrow: 1\n    }\n})\n\nexport default function NewTask() {\n    const classes = useStyles()\n    const [inputValue, setInputValue] = useState('')\n    const dispatch = useDispatch()\n\n    const submitHandler = (event: React.SyntheticEvent) => {\n        event.preventDefault()\n        if (inputValue === '') return;\n        dispatch(createTask({\n            text: inputValue,\n            completed: false\n        }))\n        setInputValue('')\n    }\n\n    const inputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setInputValue(event.target.value)\n    }\n\n    return (\n        <form onSubmit={submitHandler} className={classes.root}>\n            <TextField className={classes.input} value={inputValue} onChange={inputHandler} label=\"Task\" variant=\"outlined\" />\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Add task</Button>\n        </form>\n    )\n}","import classNames from \"classnames\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// core components\nconst useStyles = makeStyles({\n    card: {\n        border: \"0\",\n        borderRadius: \"6px\",\n        color: \"rgba(0, 0, 0, 0.87)\",\n        background: \"#fff\",\n        width: \"100%\",\n        boxShadow:\n            \"0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12)\",\n        position: \"relative\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        minWidth: \"0\",\n        wordWrap: \"break-word\",\n        fontSize: \".875rem\",\n        transition: \"all 300ms linear\",\n    }\n});\n\ntype CardProps = {\n    children: React.ReactNode\n    className: string\n}\nexport default function Card(props: CardProps) {\n    const classes = useStyles();\n    const { className, children, ...rest } = props;\n    // const cardClasses = classNames({\n    //     [classes.card]: true,\n    //     [className]: className !== undefined,\n    // });\n    return (\n        <div className={classes.card + ' ' + className} {...rest}>\n            {children}\n        </div>\n    );\n}","import Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport React, { SyntheticEvent, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, selectUserError, setUserError } from \"../features/users/usersSlice\";\nimport { post } from \"../services/api\";\nimport createStyle from \"../styles/jss/loginStyle\";\nimport Card from \"./Card\";\n\nconst useStyles = createStyle('/img/bg7.jpg')\n\nexport default function Login() {\n  const [name, setName] = useState('')\n  const [password, setPassword] = useState('')\n  const dispatch = useDispatch()\n  const [cardAnimaton, setCardAnimation] = useState(false);\n  setTimeout(() => setCardAnimation(true), 700);\n  const classes = useStyles();\n  const userError = useSelector(selectUserError)\n\n  async function submitHandler(event: SyntheticEvent) {\n    event.preventDefault();\n    dispatch(login({ name, password }))\n  }\n\n  async function registration() {\n    if (name.length > 2 && password.length > 3) {\n      const response = await post('/api/user', { name, password })\n      if (response.ok) {\n        dispatch(login({ name, password }))\n      } else {\n        try {\n          const { message } = await response.json()\n          dispatch(setUserError(message))\n        } catch (error) {\n          dispatch(setUserError('Server error'))\n        }\n      }\n    } else {\n      dispatch(setUserError('Name or password is very short'))\n    }\n  }\n\n  return (\n    <div className={classes.pageHeader}>\n      <Grid container justify=\"center\" alignItems=\"center\" className={classes.gridContainer}>\n        <Grid item xs={12} sm={6} md={4} className={classes.gridItem}>\n          <Card className={cardAnimaton ? '' : classes.cardHidden}>\n            <form onSubmit={submitHandler}>\n              <div className={classes.cardHeader}>\n                <h2>Login</h2>\n              </div>\n              <div className={classes.cardBody}>\n                {userError && <Alert severity=\"error\">{userError}</Alert>}\n                <TextField value={name}\n                  onChange={event => setName(event.target.value)}\n                  label=\"User name\"\n                  variant=\"outlined\" />\n                <TextField type=\"password\" value={password}\n                  onChange={event => setPassword(event.target.value)}\n                  label=\"Password\"\n                  variant=\"outlined\" />\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">Login</Button>\n                <Button onClick={registration} variant=\"contained\" color=\"secondary\">Registration</Button>\n              </div>\n            </form>\n          </Card>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}","import { makeStyles } from \"@material-ui/core\";\n\nexport default function createStyle(imageBackground: string) {\n    return makeStyles({\n        cardHidden: {\n            opacity: \"0\",\n            transform: \"translate3d(0, -60px, 0)\",\n        },\n        cardHeader: {\n            padding: '20px 0',\n            textAlign: 'center',\n            margin: '-40px 20px 15px 20px',\n            background: 'linear-gradient(60deg, #ab47bc, #8e24aa)',\n            boxShadow: '0 12px 20px -10px rgb(156 39 176 / 28%), 0 4px 20px 0px rgb(0 0 0 / 12%), 0 7px 8px -5px rgb(156 39 176 / 20%)',\n            color: 'white',\n            borderRadius: '3px',\n            '& h2': {\n                fontWeight: 300\n            }\n        },\n        cardBody: {\n            padding: \"2rem 1.875rem\",\n            display: \"flex\",\n            flex: \"1 1 auto\",\n            flexDirection: 'column',\n            gap: '1rem',\n            // paddingTop: '2rem',\n            // paddingBottom: '2rem',\n        },\n        gridContainer: {\n            width: \"auto\",\n            height: \"100vh\",\n            zIndex: 2,\n            position: 'relative'\n        },\n        gridItem: {\n            paddingRight: \"15px\",\n            paddingLeft: \"15px\",\n        },\n        pageHeader: {\n            minHeight: \"100vh\",\n            height: \"auto\",\n            display: \"inherit\",\n            position: \"relative\",\n            margin: \"0\",\n            padding: \"0\",\n            border: \"0\",\n            alignItems: \"center\",\n            backgroundImage: `url('${imageBackground}')`,\n            backgroundSize: \"cover\",\n            backgroundPosition: \"top center\",\n            \"&:before\": {\n                background: \"rgba(0, 0, 0, 0.5)\",\n            },\n            \"&:before,&:after\": {\n                position: \"absolute\",\n                zIndex: \"1\",\n                width: \"100%\",\n                height: \"100%\",\n                display: \"block\",\n                left: \"0\",\n                top: \"0\",\n                content: '\"\"',\n            },\n        },\n    })\n}","import TasksList from './components/TasksList';\nimport NewTask from './components/NewTask';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout, selectIsLogin, selectToken } from './features/users/usersSlice';\nimport Login from './components/Login';\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { resetTasks } from './features/tasks/tasksSlice';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: \"1rem auto\",\n      minWidth: 300,\n      maxWidth: 800\n    },\n    title: {\n      flexGrow: 1,\n    },\n  })\n)\n\nfunction App() {\n  const isLogin = useSelector(selectIsLogin)\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  if (isLogin) {\n    return (\n      <div>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\" className={classes.title}>\n              Tasks\n            </Typography>\n            <Button onClick={() => {\n              dispatch(logout())\n              dispatch(resetTasks())\n            }} color=\"inherit\">Logout</Button>\n          </Toolbar>\n        </AppBar>\n        <div className={classes.root}>\n          <NewTask />\n          <TasksList />\n        </div>\n      </div>\n    )\n  } else return <Login />;\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport tasksReducer from \"../features/tasks/tasksSlice\";\nimport usersReducer from \"../features/users/usersSlice\";\n\nconst store = configureStore({\n    reducer: {\n        tasks: tasksReducer,\n        users: usersReducer\n    }\n})\n\nexport type RootState = ReturnType<typeof store.getState>\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './app/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}